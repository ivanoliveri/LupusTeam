@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<title>Back-End | Lupus' Team</title>

<div class="page-header">
    <h1>Back-End</h1>
</div>

<div class="container-fluid">
	<div class="row-fluid">
		<div class="span1">
		</div>
		<div class="span4">
			<h2>
				JAVA
			</h2>
			<p>
                El lenguaje de programación Java fue originalmente desarrollado por James Gosling de Sun Microsystems (la cual fue adquirida por la compañía Oracle) y publicado en el 1995 como un componente fundamental de la plataforma Java de Sun Microsystems. Su sintaxis deriva mucho de C y C++, pero tiene menos facilidades de bajo nivel que cualquiera de ellos. Características principales:
                <ul>
                    <li>Lenguaje orientado a objetos</li>
                    <li>Java es un lenguaje sencillo</li>
                    <li>Independiente de plataforma</li>
                    <li>Brinda un gran nivel de seguridad</li>
                    <li>Capacidad multihilo</li>
                    <li>Gran rendimiento</li>
                    <li>Creación de aplicaciones distribuidas</li>
                    <li>Su robustez o lo integrado que tiene el protocolo TCP/IP lo que lo hace un lenguaje ideal para Internet</li>
                </ul>
			</p>
		</div>
		<div class="span2">
		</div>
		<div class="span4">
			<h2>
				.NET (C#)
			</h2>
            <p>
                .NET es un framework de Microsoft que hace un énfasis en la transparencia de redes, con independencia de plataforma de hardware y que permita un rápido desarrollo de aplicaciones. Basado en ella, la empresa intenta desarrollar una estrategia horizontal que integre todos sus productos, desde el sistema operativo hasta las herramientas de mercado.
            </p>
            <p>
                C# es un lenguaje de programación orientado a objetos desarrollado y estandarizado por Microsoft como parte de su plataforma .NET. Características principales:
                <ul>
                    <li>El lenguaje es muy sencillo</li>
                    <li>Incluye un amplio soporte de estructuras, componentes, programación orientada a objetos, manipulación de errores, recolección de basura, etc</li>
                    <li>Las clases en C# pueden heredar de un padre pero puede implementar varias interfaces</li>
                    <li>Provee soporte para estructuras, un concepto el cual ha cambiado significantemente desde C++</li>
                    <li>Provee características de componentes orientados, como propiedades, eventos y atributos</li>
                    <li>Ahorro tiempo en la programación ya que tiene una librería de clases muy completa y bien diseñada</li>
                    <li>El manejo de errores está basado en excepciones</li>
                </ul>
            </p>
		</div>
		<div class="span1">
		</div>
	</div>
</div>
